/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;
import arduinoserver.Procesador;
import java.awt.event.KeyEvent;
/**
 *
 * @author cmss_
 */
public class RobotControlPanel extends javax.swing.JFrame {
    
    Procesador model;

    /**
     * Creates new form RobotControlPanel
     */
    public RobotControlPanel() {
        initComponents();
    }
    
    public void setRobot(Procesador procesador)
    {
      model = procesador;
      //model.procesa();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        avanzar = new javax.swing.JButton();
        retroceder = new javax.swing.JButton();
        derecha = new javax.swing.JButton();
        izquierda = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        controlManual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        avanzar.setText("AVANZAR");
        avanzar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avanzarActionPerformed(evt);
            }
        });
        avanzar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                avanzarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                avanzarKeyReleased(evt);
            }
        });

        retroceder.setText("RETROCEDER");
        retroceder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                retrocederActionPerformed(evt);
            }
        });
        retroceder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                retrocederKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                retrocederKeyReleased(evt);
            }
        });

        derecha.setText("DERECHA");
        derecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                derechaActionPerformed(evt);
            }
        });
        derecha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                derechaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                derechaKeyReleased(evt);
            }
        });

        izquierda.setText("IZQUIERDA");
        izquierda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                izquierdaActionPerformed(evt);
            }
        });
        izquierda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                izquierdaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                izquierdaKeyReleased(evt);
            }
        });

        stop.setText("STOP");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        controlManual.setText("Control Manual");
        controlManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlManualActionPerformed(evt);
            }
        });
        controlManual.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                controlManualKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                controlManualKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(izquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(avanzar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(retroceder, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(derecha, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(stop))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(controlManual, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(controlManual, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 118, Short.MAX_VALUE)
                .addComponent(avanzar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(retroceder, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(izquierda, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(derecha, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stop))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void avanzarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avanzarActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_avanzarActionPerformed

    private void retrocederActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_retrocederActionPerformed
        // TODO add your handling code here:
         model.procesa('s');
    }//GEN-LAST:event_retrocederActionPerformed

    private void izquierdaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_izquierdaActionPerformed
        // TODO add your handling code here:
         model.procesa('a');
    }//GEN-LAST:event_izquierdaActionPerformed

    private void derechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_derechaActionPerformed
        // TODO add your handling code here:
         model.procesa('d');
    }//GEN-LAST:event_derechaActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
         model.procesa(' ');
    }//GEN-LAST:event_stopActionPerformed

    private void avanzarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_avanzarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_W)
        {
            model.procesa('w');
        }
    }//GEN-LAST:event_avanzarKeyPressed

    private void avanzarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_avanzarKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_W)
        {
            model.procesa(' ');
        }
    }//GEN-LAST:event_avanzarKeyReleased

    private void izquierdaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_izquierdaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_A)
        {
            model.procesa('a');
        }
    }//GEN-LAST:event_izquierdaKeyPressed

    private void izquierdaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_izquierdaKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_A)
        {
            model.procesa(' ');
        }
    }//GEN-LAST:event_izquierdaKeyReleased

    private void derechaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_derechaKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_D)
        {
            model.procesa(' ');
        }
    }//GEN-LAST:event_derechaKeyReleased

    private void derechaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_derechaKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_D)
        {
            model.procesa('d');
        }
    }//GEN-LAST:event_derechaKeyPressed

    private void controlManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_controlManualActionPerformed
        // TODO add your handling code here:
       
        
    }//GEN-LAST:event_controlManualActionPerformed

    private void retrocederKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retrocederKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_S)
        {
            model.procesa('s');
        }
    }//GEN-LAST:event_retrocederKeyPressed

    private void retrocederKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_retrocederKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_S)
        {
            model.procesa(' ');
        }
    }//GEN-LAST:event_retrocederKeyReleased

    private void controlManualKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_controlManualKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_D)
        {
            
            model.procesa('d');
            
        }
        else if(evt.getKeyCode() == KeyEvent.VK_W)
        {
            model.procesa('w');
        }
        else if(evt.getKeyCode() == KeyEvent.VK_A)
        {
            model.procesa('a');
        }
        else if(evt.getKeyCode() == KeyEvent.VK_S)
        {
            model.procesa('s');
        }
    }//GEN-LAST:event_controlManualKeyPressed

    private void controlManualKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_controlManualKeyReleased
        // TODO add your handling code here:
            model.procesa(' ');
    }//GEN-LAST:event_controlManualKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RobotControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RobotControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RobotControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RobotControlPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RobotControlPanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton avanzar;
    private javax.swing.JButton controlManual;
    private javax.swing.JButton derecha;
    private javax.swing.JButton izquierda;
    private javax.swing.JButton retroceder;
    private javax.swing.JButton stop;
    // End of variables declaration//GEN-END:variables
}
